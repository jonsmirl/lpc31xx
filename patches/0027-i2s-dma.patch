Bottom: 5c440ac023309dc8465820b861ca8b4dfe2fbee9
Top:    664586781716c7288917a78c2258cb7a11128da3
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   2012-06-29 12:31:35 -0400

From 235780cba6524714ddcc79e82cc7cc73e2649269 Mon Sep 17 00:00:00 2001
Subject: i2s-dma


---

diff --git a/arch/arm/mach-lpc31xx/include/mach/hardware.h b/arch/arm/mach-lpc31xx/include/mach/hardware.h
index 5b0eca1..9858ebf 100644
--- a/arch/arm/mach-lpc31xx/include/mach/hardware.h
+++ b/arch/arm/mach-lpc31xx/include/mach/hardware.h
@@ -27,7 +27,6 @@
 
 #include "constants.h"
 
-
 /* macros to convert phys to virtual & virtual to phys memory location*/
 #define io_p2v(x) (0xf0000000 | (((x) & 0xff000000) >> 4) | ((x) & 0x000fffff))
 #define io_v2p(x) (             (((x) & 0x0ff00000) << 4) | ((x) & 0x000fffff))
diff --git a/arch/arm/mach-lpc31xx/include/mach/registers.h b/arch/arm/mach-lpc31xx/include/mach/registers.h
index 3575a79..4334ea4 100644
--- a/arch/arm/mach-lpc31xx/include/mach/registers.h
+++ b/arch/arm/mach-lpc31xx/include/mach/registers.h
@@ -217,64 +217,6 @@
 #endif
 
 /***********************************************************************
-* Audio Subsystem (ADSS) register definitions
-**********************************************************************/
-
-/* I2S Controller Module Register Structure */
-#define I2S_FORMAT_SETTINGS       __REG (I2S_PHYS + 0x00)
-#define I2S_CFG_MUX_SETTINGS      __REG (I2S_PHYS + 0x04)
-#define I2S_CLASSED_CFG           __REG (I2S_PHYS + 0x08)
-#define I2S_CLASSED_STS           __REG (I2S_PHYS + 0x0C)
-#define I2S_N_SOF_COUNTER         __REG (I2S_PHYS + 0x10)
-
-/* I2S channels */
-#define I2S_CH_TX0 1
-#define I2S_CH_TX1 2
-#define I2S_CH_RX0 3
-#define I2S_CH_RX1 4
-
-/* I2S channel specific registers */
-#define I2S_CH_LEFT_16BIT(n)      __REG (I2S_PHYS + ((n) * 0x80) + 0x00)
-#define I2S_CH_RIGHT_16BIT(n)     __REG (I2S_PHYS + ((n) * 0x80) + 0x04)
-#define I2S_CH_LEFT_24BIT(n)      __REG (I2S_PHYS + ((n) * 0x80) + 0x08)
-#define I2S_CH_RIGHT_24BIT(n)     __REG (I2S_PHYS + ((n) * 0x80) + 0x0C)
-#define I2S_CH_INT_STATUS(n)      __REG (I2S_PHYS + ((n) * 0x80) + 0x10)
-#define I2S_CH_INT_MASK(n)        __REG (I2S_PHYS + ((n) * 0x80) + 0x14)
-#define I2S_CH_LEFT32(n)          __REG (I2S_PHYS + ((n) * 0x80) + 0x20)
-#define I2S_CH_RIGHT32(n)         __REG (I2S_PHYS + ((n) * 0x80) + 0x40)
-#define I2S_CH_INTERLEAVED(n)     __REG (I2S_PHYS + ((n) * 0x80) + 0x60)
-
-/* I2S format settings register defines */
-#define I2S_FORMAT_I2S            0x3
-#define I2S_FORMAT_LSB16          0x4
-#define I2S_FORMAT_LSB18          0x5
-#define I2S_FORMAT_LSB20          0x6
-#define I2S_FORMAT_LSB24          0x7
-#define I2S_FORMAT_MASK           0x7
-#define I2S_SET_FORMAT(n, s)      ((s) << (((n) - 1) * 3))
-
-/* I2S Mux configuration setting defines */
-#define I2S_RXO_SELECT_MASTER     _BIT(1)
-#define I2S_RX1_SELECT_MASTER     _BIT(2)
-
-/* I2S interrupt status and mask bits */
-#define I2S_FIFO_RIGHT_UNDERRUN   _BIT(0)
-#define I2S_FIFO_LEFT_UNDERRUN    _BIT(1)
-#define I2S_FIFO_RIGHT_OVERRUN    _BIT(2)
-#define I2S_FIFO_LEFT_OVERRUN     _BIT(3)
-#define I2S_FIFO_LEFT_FULL        _BIT(4)
-#define I2S_FIFO_LEFT_HALF_FULL   _BIT(5) /* RX only */
-#define I2S_FIFO_LEFT_HALF_EMPTY  _BIT(5) /* TX only */
-#define I2S_FIFO_LEFT_NOT_EMPTY   _BIT(6) /* RX only */
-#define I2S_FIFO_LEFT_EMPTY       _BIT(6) /* TX only */
-#define I2S_FIFO_RIGHT_FULL       _BIT(7)
-#define I2S_FIFO_RIGHT_HALF_FULL  _BIT(8) /* RX only */
-#define I2S_FIFO_RIGHT_HALF_EMPTY _BIT(8) /* TX only */
-#define I2S_FIFO_RIGHT_NOT_EMPTY  _BIT(9) /* RX only */
-#define I2S_FIFO_RIGHT_EMPTY      _BIT(9) /* TX only */
-#define I2S_FIFO_ALL_MASK         0x3FF
-
-/***********************************************************************
  * ADC_REG register definitions
  **********************************************************************/
 #define ADC_CON_REG            __REG (ADC_PHYS + 0x20)
diff --git a/sound/soc/lpc313x/lpc313x-i2s-clocking.c b/sound/soc/lpc313x/lpc313x-i2s-clocking.c
index 9e93378..a845d28 100644
--- a/sound/soc/lpc313x/lpc313x-i2s-clocking.c
+++ b/sound/soc/lpc313x/lpc313x-i2s-clocking.c
@@ -50,6 +50,7 @@
 #include <mach/registers.h>
 #include "lpc313x-i2s-clocking.h"
 
+
 struct i2s_clk_setup {
 	u32 target_codec_rate;
 	u32 real_fs_codec_rate;
diff --git a/sound/soc/lpc313x/lpc313x-i2s.c b/sound/soc/lpc313x/lpc313x-i2s.c
index d255fa7..ffd86bbe5 100644
--- a/sound/soc/lpc313x/lpc313x-i2s.c
+++ b/sound/soc/lpc313x/lpc313x-i2s.c
@@ -27,6 +27,7 @@
 #include <linux/delay.h>
 #include <linux/clk.h>
 #include <linux/io.h>
+#include <linux/slab.h>
 
 #include <sound/core.h>
 #include <sound/pcm.h>
@@ -120,6 +121,20 @@ static struct lpc313x_i2s_info i2s_info =
 	},
 };
 
+static inline void
+lpc31xx_i2s_write(const struct lpc31xx_i2s_info *info, uint32_t reg, uint32_t value)
+{
+	__raw_writel(value, info->regs + reg);
+}
+
+static inline uint32_t
+lpc31xx_i2s_read(const struct lpc31xx_i2s_info *info, uint32_t reg)
+{
+	uint32_t value;
+	value = __raw_readl(info->regs + reg);
+	return value;
+}
+
 static inline int lpc313x_get_ch_dir(struct snd_pcm_substream *substream)
 {
 	int dir = CH_REC;
@@ -170,18 +185,19 @@ static void lpc313x_i2s_shutdown(struct snd_pcm_substream *substream,
 static int lpc313x_i2s_startup(struct snd_pcm_substream *substream,
 								struct snd_soc_dai *dai)
 {
+	struct lpc31xx_i2s_info *info = snd_soc_dai_get_drvdata(dai);
 	int dir = lpc313x_get_ch_dir(substream);
 
 	/* Select master/slave mode for RX channel */
 	if (dir == CH_REC) {
 #if defined (CONFIG_SND_I2S_RX0_SLAVE) | defined (CONFIG_SND_I2S_RX1_SLAVE)
-		I2S_CFG_MUX_SETTINGS = 0;
+		lpc31xx_i2s_write(info, I2S_CFG_MUX_SETTINGS, 0);
 #endif
 #if defined (CONFIG_SND_I2S_RX0_MASTER)
-		I2S_CFG_MUX_SETTINGS = I2S_RXO_SELECT_MASTER;
+		lpc31xx_i2s_write(info, I2S_CFG_MUX_SETTINGS, I2S_RXO_SELECT_MASTER);
 #endif
 #if defined (CONFIG_SND_I2S_RX1_MASTER)
-		I2S_CFG_MUX_SETTINGS = I2S_RX1_SELECT_MASTER;
+		lpc31xx_i2s_write(info, I2S_CFG_MUX_SETTINGS, I2S_RX1_SELECT_MASTER);
 #endif
 	}
 
@@ -205,7 +221,7 @@ static int lpc313x_i2s_startup(struct snd_pcm_substream *substream,
 	lpc313x_chan_clk_enable(i2s_info.ch_info[dir].chclk, 0, 0);
 
 	/* Mask all interrupts for the I2S channel */
-	I2S_CH_INT_MASK(i2s_info.ch_info[dir].i2s_ch) = I2S_FIFO_ALL_MASK;
+	lpc31xx_i2s_write(info, I2S_CH_INT_MASK(i2s_info.ch_info[dir].i2s_ch), I2S_FIFO_ALL_MASK);
 
 	return 0;
 }
@@ -246,6 +262,7 @@ static int lpc313x_i2s_hw_params(struct snd_pcm_substream *substream,
 			         struct snd_pcm_hw_params *params,
 					 struct snd_soc_dai *dai)
 {
+	struct lpc31xx_i2s_info *info = snd_soc_dai_get_drvdata(dai);
 	int dir = lpc313x_get_ch_dir(substream);
 	u32 tmp;
 
@@ -254,11 +271,11 @@ static int lpc313x_i2s_hw_params(struct snd_pcm_substream *substream,
 	switch (i2s_info.ch_info[dir].daifmt & SND_SOC_DAIFMT_FORMAT_MASK) {
 		case SND_SOC_DAIFMT_I2S:
 			spin_lock_irq(&i2s_info.lock);
-			tmp = I2S_FORMAT_SETTINGS &
+			tmp = lpc31xx_i2s_read(info, I2S_FORMAT_SETTINGS) &
 				~I2S_SET_FORMAT(i2s_info.ch_info[dir].i2s_ch,
 				I2S_FORMAT_MASK);
-			I2S_FORMAT_SETTINGS = tmp | I2S_SET_FORMAT(i2s_info.ch_info[dir].i2s_ch,
-				I2S_FORMAT_I2S);
+			lpc31xx_i2s_write(info, I2S_FORMAT_SETTINGS, tmp | I2S_SET_FORMAT(i2s_info.ch_info[dir].i2s_ch,
+				I2S_FORMAT_I2S));
 			spin_unlock_irq(&i2s_info.lock);
 			break;
 
@@ -398,7 +415,51 @@ EXPORT_SYMBOL_GPL(lpc313x_i2s_dai);
 
 static __devinit int lpc313x_i2s_dev_probe(struct platform_device *pdev)
 {
-	return snd_soc_register_dai(&pdev->dev, &lpc313x_i2s_dai);
+	struct lpc31xx_i2s_info *info;
+	struct resource *res;
+	int err;
+
+	info = kzalloc(sizeof(struct lpc31xx_i2s_info), GFP_KERNEL);
+	if (!info) {
+		err = -ENOMEM;
+		goto fail;
+	}
+
+	dev_set_drvdata(&pdev->dev, info);
+
+	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
+	if (!res) {
+		err = -ENODEV;
+		goto fail_free_info;
+	}
+
+	info->mem = request_mem_region(res->start, resource_size(res),
+				       pdev->name);
+	if (!info->mem) {
+		err = -EBUSY;
+		goto fail_free_info;
+	}
+
+	info->regs = ioremap(info->mem->start, resource_size(info->mem));
+	if (!info->regs) {
+		err = -ENXIO;
+		goto fail_release_mem;
+	}
+
+	err = snd_soc_register_dai(&pdev->dev, &lpc313x_i2s_dai);
+	if (err)
+		goto fail_unmap_mem;
+
+	return 0;
+
+fail_unmap_mem:
+	iounmap(info->regs);
+fail_release_mem:
+	release_mem_region(info->mem->start, resource_size(info->mem));
+fail_free_info:
+	kfree(info);
+fail:
+	return err;
 }
 
 static __devexit int lpc313x_i2s_dev_remove(struct platform_device *pdev)
diff --git a/sound/soc/lpc313x/lpc313x-i2s.h b/sound/soc/lpc313x/lpc313x-i2s.h
index 4282053..001bd6e 100644
--- a/sound/soc/lpc313x/lpc313x-i2s.h
+++ b/sound/soc/lpc313x/lpc313x-i2s.h
@@ -27,5 +27,70 @@
 
 extern struct snd_soc_dai_driver lpc313x_i2s_dai;
 
+struct lpc31xx_i2s_info {
+	struct resource			*mem;
+	void __iomem			*regs;
+};
+
+/***********************************************************************
+* Audio Subsystem (ADSS) register definitions
+**********************************************************************/
+
+/* I2S Controller Module Register Structure */
+#define I2S_FORMAT_SETTINGS       0x00
+#define I2S_CFG_MUX_SETTINGS      0x04
+#define I2S_CLASSED_CFG           0x08
+#define I2S_CLASSED_STS           0x0C
+#define I2S_N_SOF_COUNTER         0x10
+
+/* I2S channels */
+#define I2S_CH_TX0 1
+#define I2S_CH_TX1 2
+#define I2S_CH_RX0 3
+#define I2S_CH_RX1 4
+
+/* I2S channel specific registers */
+#define I2S_CH_LEFT_16BIT(n)      (((n) * 0x80) + 0x00)
+#define I2S_CH_RIGHT_16BIT(n)     (((n) * 0x80) + 0x04)
+#define I2S_CH_LEFT_24BIT(n)      (((n) * 0x80) + 0x08)
+#define I2S_CH_RIGHT_24BIT(n)     (((n) * 0x80) + 0x0C)
+#define I2S_CH_INT_STATUS(n)      (((n) * 0x80) + 0x10)
+#define I2S_CH_INT_MASK(n)        (((n) * 0x80) + 0x14)
+#define I2S_CH_LEFT32(n)          (((n) * 0x80) + 0x20)
+#define I2S_CH_RIGHT32(n)         (((n) * 0x80) + 0x40)
+#define I2S_CH_INTERLEAVED(n)     (((n) * 0x80) + 0x60)
+
+/* I2S format settings register defines */
+#define I2S_FORMAT_I2S            0x3
+#define I2S_FORMAT_LSB16          0x4
+#define I2S_FORMAT_LSB18          0x5
+#define I2S_FORMAT_LSB20          0x6
+#define I2S_FORMAT_LSB24          0x7
+#define I2S_FORMAT_MASK           0x7
+#define I2S_SET_FORMAT(n, s)      ((s) << (((n) - 1) * 3))
+
+/* I2S Mux configuration setting defines */
+#define I2S_RXO_SELECT_MASTER     _BIT(1)
+#define I2S_RX1_SELECT_MASTER     _BIT(2)
+
+/* I2S interrupt status and mask bits */
+#define I2S_FIFO_RIGHT_UNDERRUN   _BIT(0)
+#define I2S_FIFO_LEFT_UNDERRUN    _BIT(1)
+#define I2S_FIFO_RIGHT_OVERRUN    _BIT(2)
+#define I2S_FIFO_LEFT_OVERRUN     _BIT(3)
+#define I2S_FIFO_LEFT_FULL        _BIT(4)
+#define I2S_FIFO_LEFT_HALF_FULL   _BIT(5) /* RX only */
+#define I2S_FIFO_LEFT_HALF_EMPTY  _BIT(5) /* TX only */
+#define I2S_FIFO_LEFT_NOT_EMPTY   _BIT(6) /* RX only */
+#define I2S_FIFO_LEFT_EMPTY       _BIT(6) /* TX only */
+#define I2S_FIFO_RIGHT_FULL       _BIT(7)
+#define I2S_FIFO_RIGHT_HALF_FULL  _BIT(8) /* RX only */
+#define I2S_FIFO_RIGHT_HALF_EMPTY _BIT(8) /* TX only */
+#define I2S_FIFO_RIGHT_NOT_EMPTY  _BIT(9) /* RX only */
+#define I2S_FIFO_RIGHT_EMPTY      _BIT(9) /* TX only */
+#define I2S_FIFO_ALL_MASK         0x3FF
+
+
+
 #endif
