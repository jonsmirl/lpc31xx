Bottom: ba0de2c90e4e6a80eb0a35da91c5ce216592dd5c
Top:    03db80a311947532a6e3dc529308bf26ae0a69d0
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   2012-03-24 11:26:09 -0400

Refresh of devicetree

---

diff --git a/arch/arm/boot/dts/lpc3131.dtsi b/arch/arm/boot/dts/lpc3131.dtsi
index 901c469..ae6f45e 100644
--- a/arch/arm/boot/dts/lpc3131.dtsi
+++ b/arch/arm/boot/dts/lpc3131.dtsi
@@ -181,7 +181,7 @@
 			interrupts = <26>;
 		};
 		usb@19000000 {
-			compatible = "nxp,lpc31xx-usb, usb-ehci";
+			compatible = "nxp,lpc31xx-usb", "usb-ehci";
 			reg = <0x19000000 0x1000>;
 			interrupts = <27>;
 		};
diff --git a/arch/arm/mach-lpc31xx/usb.c b/arch/arm/mach-lpc31xx/usb.c
index 57699b7..538f11b 100644
--- a/arch/arm/mach-lpc31xx/usb.c
+++ b/arch/arm/mach-lpc31xx/usb.c
@@ -95,6 +95,7 @@
 #define OTGSC_INT_STAT_MASK (0x007F0000)
 
 /*-------------------------------------------------------------------------*/
+#if defined(CONFIG_USB_GADGET_FSL_USB2) || defined(CONFIG_USB_OTG)
 static struct resource lpc313x_usb_resource[] = {
 	[0] = {
 		.start = (u32) (USBOTG_PHYS),
@@ -107,6 +108,7 @@ static struct resource lpc313x_usb_resource[] = {
 		.flags = IORESOURCE_IRQ,
 	}
 };
+#endif
 
 struct lpc313x_usb_board_t {
 	/* timer for VBUS enable */
@@ -118,18 +120,13 @@ struct lpc313x_usb_board_t {
 static struct lpc313x_usb_board_t lpc313x_usb_brd;
 
 static u64 usb_dmamask = 0xffffffffUL;;
-static void	lpc313x_usb_release(struct device *dev);
-
-struct fsl_usb2_platform_data lpc313x_fsl_config = {
-#if defined(CONFIG_USB_OTG) || (defined(CONFIG_USB_EHCI_HCD) && defined(CONFIG_USB_GADGET_FSL_USB2))
-	.operating_mode = FSL_USB2_DR_OTG,
-#elif defined(CONFIG_USB_GADGET_FSL_USB2) && !defined(CONFIG_USB_EHCI_HCD)
-	.operating_mode = FSL_USB2_DR_DEVICE,
-#elif !defined(CONFIG_USB_GADGET_FSL_USB2) && defined(CONFIG_USB_EHCI_HCD)
-	.operating_mode = FSL_USB2_DR_HOST,
-#endif
-	.phy_mode = FSL_USB2_PHY_UTMI,
-};
+/*-------------------------------------------------------------------------*/
+
+static void	lpc313x_usb_release(struct device *dev)
+{
+	// do nothing
+}
+
 
 #if defined(CONFIG_USB_GADGET_FSL_USB2) || defined(CONFIG_USB_OTG)
 
@@ -139,7 +136,6 @@ static struct platform_device lpc313x_udc_device = {
 		.dma_mask          = &usb_dmamask,
 		.coherent_dma_mask = 0xffffffff,
 		.release           = lpc313x_usb_release,
-		.platform_data     = &lpc313x_fsl_config,
 	},
 	.num_resources = ARRAY_SIZE(lpc313x_usb_resource),
 	.resource      = lpc313x_usb_resource,
@@ -148,26 +144,21 @@ static struct platform_device lpc313x_udc_device = {
 
 #if defined(CONFIG_USB_EHCI_HCD) || defined(CONFIG_USB_OTG)
 
+#ifndef CONFIG_OF
 static struct platform_device lpc313x_ehci_device = {
 	.name		= "lpc-ehci",
 	.dev = {
 		.dma_mask          = &usb_dmamask,
 		.coherent_dma_mask = 0xffffffff,
 		.release           = lpc313x_usb_release,
-		.platform_data     = &lpc313x_fsl_config,
 	},
 	.num_resources = ARRAY_SIZE(lpc313x_usb_resource),
 	.resource      = lpc313x_usb_resource,
 };
 #endif
+#endif
 
 
-/*-------------------------------------------------------------------------*/
-static void	lpc313x_usb_release(struct device *dev)
-{
-	// do nothing
-}
-
 static irqreturn_t lpc313x_vbus_ovrc_irq(int irq, void *data)
 {
 	struct lpc313x_usb_board_t* brd = data;
@@ -242,11 +233,12 @@ int __init usbotg_init(void)
 	} else {
 #if defined(CONFIG_USB_EHCI_HCD)
 		/* register host */
+#ifndef CONFIG_OF
 		printk(KERN_INFO "Registering USB host 0x%08x 0x%08x (%d)\n", USB_DEV_OTGSC, EVRT_RSR(bank), bank);
 		retval = platform_device_register(&lpc313x_ehci_device);
 		if ( 0 != retval )
 			printk(KERN_INFO "Can't register lpc313x_ehci_device device\n");
-
+#endif
 		/* Create VBUS enable timer */
 		setup_timer(&lpc313x_usb_brd.vbus_timer, lpc313x_vbusen_timer,
 				(unsigned long)&lpc313x_usb_brd);
diff --git a/arch/arm/mach-lpc31xx/wdt.c b/arch/arm/mach-lpc31xx/wdt.c
index 0cf5d37..160e8cc 100644
--- a/arch/arm/mach-lpc31xx/wdt.c
+++ b/arch/arm/mach-lpc31xx/wdt.c
@@ -24,6 +24,7 @@
 #include <mach/constants.h>
 #include <mach/irqs.h>
 
+#ifndef CONFIG_OF
 static struct resource watchdog_resources[] = {
 	{
 		.start = WDT_PHYS,
@@ -45,3 +46,4 @@ static int __init wdt_device_init(void)
 }
 
 arch_initcall(wdt_device_init);
+#endif
diff --git a/drivers/usb/host/ehci-lpc.c b/drivers/usb/host/ehci-lpc.c
index 9932f36..6044cc9 100644
--- a/drivers/usb/host/ehci-lpc.c
+++ b/drivers/usb/host/ehci-lpc.c
@@ -76,6 +76,17 @@ static const struct hc_driver lpc_ehci_hc_driver = {
 	.clear_tt_buffer_complete = ehci_clear_tt_buffer_complete,
 };
 
+struct fsl_usb2_platform_data lpc313x_fsl_config = {
+#if defined(CONFIG_USB_OTG) || (defined(CONFIG_USB_EHCI_HCD) && defined(CONFIG_USB_GADGET_FSL_USB2))
+	.operating_mode = FSL_USB2_DR_OTG,
+#elif defined(CONFIG_USB_GADGET_FSL_USB2) && !defined(CONFIG_USB_EHCI_HCD)
+	.operating_mode = FSL_USB2_DR_DEVICE,
+#elif !defined(CONFIG_USB_GADGET_FSL_USB2) && defined(CONFIG_USB_EHCI_HCD)
+	.operating_mode = FSL_USB2_DR_HOST,
+#endif
+	.phy_mode = FSL_USB2_PHY_UTMI,
+};
+
 static int lpc_ehci_probe(struct platform_device *pdev)
 {
 	struct fsl_usb2_platform_data *pdata;
@@ -89,7 +100,7 @@ static int lpc_ehci_probe(struct platform_device *pdev)
 		return -ENODEV;
 
 	/* Need platform data for setup */
-	pdata = (struct fsl_usb2_platform_data *)pdev->dev.platform_data;
+	pdata = &lpc313x_fsl_config;
 	if (!pdata) {
 		dev_err(&pdev->dev,
 			"No platform data for %s.\n", dev_name(&pdev->dev));
@@ -342,6 +353,14 @@ static int lpc313x_ehci_resume(struct platform_device * pdev)
 	return 0;
 }
 
+#if defined(CONFIG_OF)
+static const struct of_device_id ehci_lpc_of_match[] = {
+	{ .compatible = "nxp,lpc31xx-usb" },
+	{},
+};
+MODULE_DEVICE_TABLE(of, ehci_lpc_of_match);
+#endif
+
 static struct platform_driver ehci_lpc_driver = {
 	.probe = lpc_ehci_probe,
 	.remove = lpc_ehci_remove,
@@ -353,6 +372,9 @@ static struct platform_driver ehci_lpc_driver = {
 		.suspend = lpc_ehci_suspend,
 		.resume  = lpc_ehci_resume,
 #endif
+#ifdef CONFIG_OF
+		.of_match_table = ehci_lpc_of_match,
+#endif
 	},
 };
 
diff --git a/drivers/watchdog/wdt_lpc313x.c b/drivers/watchdog/wdt_lpc313x.c
index 22e12e2..f5c4978 100644
--- a/drivers/watchdog/wdt_lpc313x.c
+++ b/drivers/watchdog/wdt_lpc313x.c
@@ -329,12 +329,23 @@ static int lpc313x_wdt_remove(struct platform_device *pdev)
 	return 0;
 }
 
+#if defined(CONFIG_OF)
+static const struct of_device_id lpc313x_wdt_of_match[] = {
+	{ .compatible = "nxp,lpc31xx-wdt" },
+	{},
+};
+MODULE_DEVICE_TABLE(of, lpc313x_wdt_of_match);
+#endif
+
 static struct platform_driver lpc313x_wdt_driver = {
 	.probe = lpc313x_wdt_probe,
 	.remove = __devexit_p(lpc313x_wdt_remove),
 	.driver = {
-		   .owner = THIS_MODULE,
-		   .name = "lpc313x-wdt",
+			.owner = THIS_MODULE,
+			.name = "lpc313x-wdt",
+#ifdef CONFIG_OF
+			.of_match_table = lpc313x_wdt_of_match,
+#endif
 		   },
 };
