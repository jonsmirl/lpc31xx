Bottom: 42d87b584472f9d01b20844e162c2aa6964a837a
Top:    275c2b08730bc7c9efd8b68a8f9b32e8a68011e7
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   2012-04-15 00:42:43 -0400

Refresh of irq.patch

---

diff --git a/drivers/net/ethernet/davicom/dm9000.c b/drivers/net/ethernet/davicom/dm9000.c
index f8fd607..8b6d5e3 100644
--- a/drivers/net/ethernet/davicom/dm9000.c
+++ b/drivers/net/ethernet/davicom/dm9000.c
@@ -35,11 +35,15 @@
 #include <linux/platform_device.h>
 #include <linux/irq.h>
 #include <linux/slab.h>
+#include <linux/of_gpio.h>
 
 #include <asm/delay.h>
 #include <asm/irq.h>
 #include <asm/io.h>
 
+#include <linux/gpio.h>
+#include <mach/gpio.h>
+
 #include "dm9000.h"
 
 /* Board/System/Debug information/definition ---------------- */
@@ -96,7 +100,7 @@ typedef struct board_info {
 
 	void __iomem	*io_addr;	/* Register I/O base address */
 	void __iomem	*io_data;	/* Data I/O address */
-	u16		 irq;		/* IRQ */
+	unsigned long	 irq_flags;
 
 	u16		tx_pkt_cnt;
 	u16		queue_pkt_len;
@@ -123,7 +127,6 @@ typedef struct board_info {
 	struct resource *data_res;
 	struct resource	*addr_req;   /* resources requested */
 	struct resource *data_req;
-	struct resource *irq_res;
 
 	int		 irq_wake;
 
@@ -691,17 +694,18 @@ static void
 dm9000_release_board(struct platform_device *pdev, struct board_info *db)
 {
 	/* unmap our resources */
-
 	iounmap(db->io_addr);
 	iounmap(db->io_data);
 
 	/* release the resources */
-
-	release_resource(db->data_req);
-	kfree(db->data_req);
-
-	release_resource(db->addr_req);
-	kfree(db->addr_req);
+	if (db->data_req) {
+		release_resource(db->data_req);
+		kfree(db->data_req);
+	}
+	if (db->addr_req) {
+		release_resource(db->addr_req);
+		kfree(db->addr_req);
+	}
 }
 
 static unsigned char dm9000_type_to_char(enum dm9000_type type)
@@ -1166,7 +1170,7 @@ static int
 dm9000_open(struct net_device *dev)
 {
 	board_info_t *db = netdev_priv(dev);
-	unsigned long irqflags = db->irq_res->flags & IRQF_TRIGGER_MASK;
+	unsigned long irqflags = db->irq_flags & IRQF_TRIGGER_MASK;
 
 	if (netif_msg_ifup(db))
 		dev_dbg(db->dev, "enabling %s\n", dev->name);
@@ -1357,6 +1361,31 @@ static const struct net_device_ops dm9000_netdev_ops = {
 #endif
 };
 
+# define DM_IO_DELAY()	do { gpio_get_value(GPIO_MNAND_RYBN3);} while(0)
+
+static void dm9000_dumpblk(void __iomem *reg, int count)
+{
+	int i;
+	int tmp;
+
+	count = (count + 1) >> 1;
+	for (i = 0; i < count; i++) {
+		DM_IO_DELAY();
+		tmp = readw(reg);
+	}
+}
+
+static void dm9000_inblk(void __iomem *reg, void *data, int count)
+{
+	int i;
+	u16* pdata = (u16*)data;
+	count = (count + 1) >> 1;
+	for (i = 0; i < count; i++) {
+		DM_IO_DELAY();
+		*pdata++ = readw(reg);
+	}
+}
+
 /*
  * Search DM9000 board, allocate space and register it
  */
@@ -1366,6 +1395,7 @@ dm9000_probe(struct platform_device *pdev)
 	struct dm9000_plat_data *pdata = pdev->dev.platform_data;
 	struct board_info *db;	/* Point a board information structure */
 	struct net_device *ndev;
+	struct resource *irq_res;
 	const unsigned char *mac_src;
 	int ret = 0;
 	int iosize;
@@ -1396,15 +1426,20 @@ dm9000_probe(struct platform_device *pdev)
 
 	db->addr_res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
 	db->data_res = platform_get_resource(pdev, IORESOURCE_MEM, 1);
-	db->irq_res  = platform_get_resource(pdev, IORESOURCE_IRQ, 0);
-
-	if (db->addr_res == NULL || db->data_res == NULL ||
-	    db->irq_res == NULL) {
+	if (db->addr_res == NULL || db->data_res == NULL ) {
 		dev_err(db->dev, "insufficient resources\n");
 		ret = -ENOENT;
 		goto out;
 	}
 
+	irq_res  = platform_get_resource(pdev, IORESOURCE_IRQ, 0);
+	if (!irq_res) {
+		dev_err(db->dev, "missing irq\n", ret);
+		goto out;
+	}
+	ndev->irq	= irq_res->start;
+	db->irq_flags	= irq_res->flags;
+
 	db->irq_wake = platform_get_irq(pdev, 1);
 	if (db->irq_wake >= 0) {
 		dev_dbg(db->dev, "wakeup irq %d\n", db->irq_wake);
@@ -1463,10 +1498,11 @@ dm9000_probe(struct platform_device *pdev)
 		ret = -EINVAL;
 		goto out;
 	}
+/* fixme */
+pdata->flags		= DM9000_PLATF_16BITONLY | DM9000_PLATF_NO_EEPROM | DM9000_PLATF_SIMPLE_PHY;
 
 	/* fill in parameters for net-dev structure */
 	ndev->base_addr = (unsigned long)db->io_addr;
-	ndev->irq	= db->irq_res->start;
 
 	/* ensure at least we have a default set of IO routines */
 	dm9000_set_io(db, iosize);
@@ -1489,13 +1525,15 @@ dm9000_probe(struct platform_device *pdev)
 		 * over-rides */
 
 		if (pdata->inblk != NULL)
-			db->inblk = pdata->inblk;
+//			db->inblk = pdata->inblk;
+			db->inblk = dm9000_inblk;
 
 		if (pdata->outblk != NULL)
 			db->outblk = pdata->outblk;
 
 		if (pdata->dumpblk != NULL)
-			db->dumpblk = pdata->dumpblk;
+//			db->dumpblk = pdata->dumpblk;
+			db->dumpblk = dm9000_dumpblk;
 
 		db->flags = pdata->flags;
 	}
