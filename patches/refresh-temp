Bottom: b0a6e029c1fefef0eb575a4395743be7fa8165b4
Top:    cc2918a8c9adcf1ca3faad00084ab4402c226a93
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   2012-03-26 09:28:24 -0400

Refresh of i2c-resource

---

diff --git a/arch/arm/mach-lpc31xx/Makefile b/arch/arm/mach-lpc31xx/Makefile
index a8ab311..4633f9b 100644
--- a/arch/arm/mach-lpc31xx/Makefile
+++ b/arch/arm/mach-lpc31xx/Makefile
@@ -4,7 +4,7 @@
 
 # Object file lists.
 
-obj-y			+= irq.o time.o generic.o i2c.o gpio.o dma.o usb.o wdt.o clock.o
+obj-y			+= irq.o time.o generic.o i2c.o dma.o usb.o wdt.o clock.o
 obj-$(CONFIG_GPIOLIB) += gpiolib.o
 obj-$(CONFIG_OF) += dt.o
 
diff --git a/arch/arm/mach-lpc31xx/gpio.c b/arch/arm/mach-lpc31xx/gpio.c
index fd09c8b..446faca 100644
--- a/arch/arm/mach-lpc31xx/gpio.c
+++ b/arch/arm/mach-lpc31xx/gpio.c
@@ -51,27 +51,6 @@ EXPORT_SYMBOL(lpx313x_gpio_func_mode);
 
 
 
-int lpc313x_gpio_direction_output(unsigned gpio, int value)
-{
-	unsigned long flags;
-	int port = (gpio & GPIO_PORT_MASK);
-	int pin = 1 << (gpio & GPIO_PIN_MASK);
-
-	raw_local_irq_save(flags);
-
-	GPIO_M1_SET(port) = pin; 
-
-	if(value) {
-		GPIO_M0_SET(port) = pin;
-	} else {
-		GPIO_M0_RESET(port) = pin;
-	}
-
-	raw_local_irq_restore(flags);
-	return 0;
-}
-
-EXPORT_SYMBOL(lpc313x_gpio_direction_output);
 
 
 #ifndef CONFIG_GPIOLIB
diff --git a/arch/arm/mach-lpc31xx/gpiolib.c b/arch/arm/mach-lpc31xx/gpiolib.c
index 1566ec5..9fe8c86 100644
--- a/arch/arm/mach-lpc31xx/gpiolib.c
+++ b/arch/arm/mach-lpc31xx/gpiolib.c
@@ -166,6 +166,27 @@ struct lpc313x_gpio_chip lpc313x_gpios[] = {
 	},
 };
 
+int lpc313x_gpio_direction_output(unsigned gpio, int value)
+{
+	unsigned long flags;
+	int port = (gpio & GPIO_PORT_MASK);
+	int pin = 1 << (gpio & GPIO_PIN_MASK);
+
+	raw_local_irq_save(flags);
+
+	GPIO_M1_SET(port) = pin;
+
+	if(value) {
+		GPIO_M0_SET(port) = pin;
+	} else {
+		GPIO_M0_RESET(port) = pin;
+	}
+
+	raw_local_irq_restore(flags);
+	return 0;
+}
+
+EXPORT_SYMBOL(lpc313x_gpio_direction_output);
 
 static inline int lpc3131_gpio_direction_input(struct gpio_chip *chip, unsigned offset)
 {
