Bottom: 90a898bdb089d9a24e86de57d59f2be3caa65287
Top:    a60e8eef2d6d3c0d56ad08c15257dc8d9415158c
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   2012-04-15 16:28:18 -0400

Refresh of dma.patch

---

diff --git a/arch/arm/boot/dts/ea3131.dts b/arch/arm/boot/dts/ea3131.dts
index 12dfd19..d1eb9d4 100644
--- a/arch/arm/boot/dts/ea3131.dts
+++ b/arch/arm/boot/dts/ea3131.dts
@@ -60,7 +60,8 @@
 			vref_delay_usecs = <100>;
 			x-plate-ohms = <419>;
 			y-plate-ohms = <486>;
-			pen-irq = <37>;
+			interrupt-parent = <&evtr>;
+			pen-irq = <7 4>;
 			gpio-pendown = <&gpio_gpio 4 0>;
 		};
 	};
@@ -85,6 +86,8 @@
 				&gpio_ebi_i2stx_0 5 0 /* power, broken hardware design */
 				0 /* slot select, no hardware */
 			>;
+			interrupt-parent = <&evtr>;
+			interrupt = <6 8>;
 		};
 	};
 	usb@19000000 {
@@ -103,6 +106,9 @@
 		dm9000@20020000 {
 			compatible = "davicom,dm9000";
 			reg = <0x20020000 0x100 0x20030000 0x100>;
+			/* interrupt-parent = <&evtr>; 
+			interrupts = <4 4>; */
+			interrupts = <34>;
 			gpios = <
 				&gpio_ebi_i2stx_0 2 0 /* main irq, map gpio to irq */
 				0  /* WOL irq, map gpio to irq */
diff --git a/arch/arm/boot/dts/lpc3131.dtsi b/arch/arm/boot/dts/lpc3131.dtsi
index 6fd9b64..096fe21 100644
--- a/arch/arm/boot/dts/lpc3131.dtsi
+++ b/arch/arm/boot/dts/lpc3131.dtsi
@@ -33,7 +33,7 @@
 		#event-cells = <3>;
 		compatible = "nxp,lpc31xx-evtr";
 		interrupt-controller;
-		#interrupt-cells = <1>;
+		#interrupt-cells = <2>;
 		reg = <0x13000000 0x800>;
 		interrupt-parent = <&intc>;
 		interrupts = <1 2 3 4>;  /* cascaded */
@@ -46,7 +46,8 @@
 	wdt@13002400 {
 		compatible = "nxp,lpc31xx-wdt";
 		reg = <0x13002400 0x400>;
-		interrupts = <30>;
+		interrupt-parent = <&evtr>;
+		interrupts = <0 1>;
 	};
 	sys@13002800 {
 		compatible = "nxp,lpc31xx-sys";
diff --git a/arch/arm/mach-lpc31xx/include/mach/gpio.h b/arch/arm/mach-lpc31xx/include/mach/gpio.h
index 8adb26d..2e3175c 100644
--- a/arch/arm/mach-lpc31xx/include/mach/gpio.h
+++ b/arch/arm/mach-lpc31xx/include/mach/gpio.h
@@ -28,7 +28,6 @@
 
 #define ARCH_NR_GPIOS 1024
 
-
 #define GPIO_PORT_MASK  0x0FE0
 #define GPIO_PIN_MASK   0x001F
 
diff --git a/drivers/net/ethernet/davicom/dm9000.c b/drivers/net/ethernet/davicom/dm9000.c
index f8fd607..761926c 100644
--- a/drivers/net/ethernet/davicom/dm9000.c
+++ b/drivers/net/ethernet/davicom/dm9000.c
@@ -35,11 +35,15 @@
 #include <linux/platform_device.h>
 #include <linux/irq.h>
 #include <linux/slab.h>
+#include <linux/of_gpio.h>
 
 #include <asm/delay.h>
 #include <asm/irq.h>
 #include <asm/io.h>
 
+#include <linux/gpio.h>
+#include <mach/gpio.h>
+
 #include "dm9000.h"
 
 /* Board/System/Debug information/definition ---------------- */
@@ -59,7 +63,7 @@ MODULE_PARM_DESC(watchdog, "transmit timeout in milliseconds");
 /*
  * Debug messages level
  */
-static int debug;
+static int debug = 4;
 module_param(debug, int, 0644);
 MODULE_PARM_DESC(debug, "dm9000 debug level (0-4)");
 
@@ -658,6 +662,7 @@ dm9000_poll_work(struct work_struct *w)
 	board_info_t *db = container_of(dw, board_info_t, phy_poll);
 	struct net_device *ndev = db->ndev;
 
+printk("dm9000_poll_work\n");
 	if (db->flags & DM9000_PLATF_SIMPLE_PHY &&
 	    !(db->flags & DM9000_PLATF_EXT_PHY)) {
 		unsigned nsr = dm9000_read_locked(db, DM9000_NSR);
@@ -691,17 +696,18 @@ static void
 dm9000_release_board(struct platform_device *pdev, struct board_info *db)
 {
 	/* unmap our resources */
-
 	iounmap(db->io_addr);
 	iounmap(db->io_data);
 
 	/* release the resources */
-
-	release_resource(db->data_req);
-	kfree(db->data_req);
-
-	release_resource(db->addr_req);
-	kfree(db->addr_req);
+	if (db->data_req) {
+		release_resource(db->data_req);
+		kfree(db->data_req);
+	}
+	if (db->addr_req) {
+		release_resource(db->addr_req);
+		kfree(db->addr_req);
+	}
 }
 
 static unsigned char dm9000_type_to_char(enum dm9000_type type)
@@ -1065,6 +1071,7 @@ static irqreturn_t dm9000_interrupt(int irq, void *dev_id)
 	unsigned long flags;
 	u8 reg_save;
 
+	printk("dm9000_interrupt\n");
 	dm9000_dbg(db, 3, "entering %s\n", __func__);
 
 	/* A real interrupt coming */
@@ -1174,6 +1181,8 @@ dm9000_open(struct net_device *dev)
 	/* If there is no IRQ type specified, default to something that
 	 * may work, and tell the user that this is a problem */
 
+	irqflags |= IRQ_TYPE_LEVEL_HIGH;
+
 	if (irqflags == IRQF_TRIGGER_NONE)
 		dev_warn(db->dev, "WARNING: no IRQ resource flags set.\n");
 
@@ -1357,6 +1366,31 @@ static const struct net_device_ops dm9000_netdev_ops = {
 #endif
 };
 
+# define DM_IO_DELAY()	do { gpio_get_value(GPIO_MNAND_RYBN3);} while(0)
+
+static void dm9000_dumpblk(void __iomem *reg, int count)
+{
+	int i;
+	int tmp;
+
+	count = (count + 1) >> 1;
+	for (i = 0; i < count; i++) {
+		DM_IO_DELAY();
+		tmp = readw(reg);
+	}
+}
+
+static void dm9000_inblk(void __iomem *reg, void *data, int count)
+{
+	int i;
+	u16* pdata = (u16*)data;
+	count = (count + 1) >> 1;
+	for (i = 0; i < count; i++) {
+		DM_IO_DELAY();
+		*pdata++ = readw(reg);
+	}
+}
+
 /*
  * Search DM9000 board, allocate space and register it
  */
@@ -1463,6 +1497,8 @@ dm9000_probe(struct platform_device *pdev)
 		ret = -EINVAL;
 		goto out;
 	}
+/* fixme */
+pdata->flags		= DM9000_PLATF_16BITONLY | DM9000_PLATF_NO_EEPROM | DM9000_PLATF_SIMPLE_PHY;
 
 	/* fill in parameters for net-dev structure */
 	ndev->base_addr = (unsigned long)db->io_addr;
@@ -1489,13 +1525,15 @@ dm9000_probe(struct platform_device *pdev)
 		 * over-rides */
 
 		if (pdata->inblk != NULL)
-			db->inblk = pdata->inblk;
+//			db->inblk = pdata->inblk;
+			db->inblk = dm9000_inblk;
 
 		if (pdata->outblk != NULL)
 			db->outblk = pdata->outblk;
 
 		if (pdata->dumpblk != NULL)
-			db->dumpblk = pdata->dumpblk;
+//			db->dumpblk = pdata->dumpblk;
+			db->dumpblk = dm9000_dumpblk;
 
 		db->flags = pdata->flags;
 	}
